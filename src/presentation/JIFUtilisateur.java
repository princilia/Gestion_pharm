 /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import persistence.IDaoUtilisateur;
import persistence.MySQL.DaoFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.TableModelUtilisateur;
import transfertObject.Utilisateur;
import transfertObject.Utilisateur.TypeUtilisateur;

public class JIFUtilisateur extends javax.swing.JInternalFrame {
    private static boolean control=false;
    

    /**
     * Creates new form JIFClients
     */
    public JIFUtilisateur() {
        
         initComponents();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUtil = new javax.swing.JTable (myModel);
        jButtonAjouter = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jLabelTitre = new javax.swing.JLabel();
        jComboBoxFiltre = new javax.swing.JComboBox();

        setTitle("Utilisateurs");
        setVisible(true);

        jTableUtil.setModel(myModel);
        jTableUtil.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableUtil);

        jButtonAjouter.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAjouter.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jButtonAjouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ajout.jpg"))); // NOI18N
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonModifier.setBackground(new java.awt.Color(255, 255, 255));
        jButtonModifier.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jButtonModifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/modif.jpg"))); // NOI18N
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jLabelTitre.setFont(new java.awt.Font("Traditional Arabic", 1, 12)); // NOI18N
        jLabelTitre.setForeground(new java.awt.Color(0, 0, 204));
        jLabelTitre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icones/Filter_1_1.png"))); // NOI18N
        jLabelTitre.setText("Type:");

        jComboBoxFiltre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Tous>", "Employé", "Stagiaire" }));
        jComboBoxFiltre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFiltreActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(jLabelTitre)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBoxFiltre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(19, 19, 19)
                .add(jButtonAjouter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButtonModifier, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabelTitre)
                            .add(jComboBoxFiltre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonAjouter)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonModifier, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
       
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDUtilisateur(parent, "INSERTION DU UTILISATEUR");
        
        refreshModel();
        
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
       
        if (jTableUtil.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Gestion Pharm",JOptionPane.ERROR_MESSAGE);
        else {
            // renvoie l'objet utilisateur à passer en paramètre
            Utilisateur util =myModel.getMyList(jTableUtil.getSelectedRow());
      
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDUtilisateur(parent, "MODIFICATION UTILISATEUR", util);
            
            refreshModel();
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jComboBoxFiltreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFiltreActionPerformed
   
        this.rechAll();
    }//GEN-LAST:event_jComboBoxFiltreActionPerformed

    private void refreshModel() {
       
        myModel.setMyList(daoUtil.selectUtilisateur());
            
    }
    
    private void rechAll(){
        String typeUtil = jComboBoxFiltre.getSelectedItem().toString();
        
        if(typeUtil.equals("<Tous>"))
        { 
           this.refreshModel();
        }else {
            myModel.setMyList(daoUtil.selectUtilisateurTyp(TypeUtilisateur.valueOf(typeUtil)));
        } 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JComboBox jComboBoxFiltre;
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUtil;
    // End of variables declaration//GEN-END:variables

    private IDaoUtilisateur daoUtil = DaoFactory.getDaoUtilisateur();
    private TableModelUtilisateur myModel = new model.TableModelUtilisateur (daoUtil.selectUtilisateur());
    
    static boolean modif = false;
}
